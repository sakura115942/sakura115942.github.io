<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>无题</title>
    <url>/1970/01/01/0000_%E6%97%A0%E9%A2%98/</url>
    <content><![CDATA[<p><img src="..%5C%E7%AA%93%E6%9E%A0%E3%81%BC%E3%81%8B%E3%81%97.jpg" alt="Alice"></p>
<span id="more"></span>

<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>小林さんちのメイドラゴン<br>ブラッククローバー<br>ご注文はうさぎですか?<br>少女終末旅行<br>うらら迷路帖<br>進撃の巨人<br>夏目友人帳<br>Fate/kaleid liner 魔法少女☆伊莉雅<br>恋と嘘  </p>
<p><del>[2020-05-15] 鬼滅の刃</del>  </p>
<hr>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>寻找手艺<br>寻味顺德<br>万物滋养<br>生活如沸<br>新日本風土記<br>食彩の王国<br>我住在这里的理由<br>Bushcraft Build-Off<br>Treehouse Master  </p>
<p><del>味道云南</del>  </p>
<hr>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>三色绘恋<br>三色绘恋S<br>うたわれるもの<br>9-nine-ここのつここのかここのいろ<br>9-nine-そらいろそらうたそらのおと<br>9-nine-はるいろはるこいはるのかぜ<br>9-nine-ゆきいろゆきはなゆきのあと<br>Never7 -the end of infinity-<br>穢翼のユースティア<br>eden*<br>夏空カナタ<br>素晴らしき日々<del>不連続存在</del><br>サクラノ詩-櫻の森の上を舞う-<br>RIDDLE JOKER<br>月に寄りそう乙女の作法2.1 E×S×PAR!!<br>月に寄りそう乙女の作法2.2 A×L+SA!!<br>メモリーズオフ 2nd<br>未来ラジオと人工鳩<br>美少女万華鏡-理と迷宮の少女-<br>月姬<br>千の刃濤、桃花染の皇姫<br>シュタインズゲート<br>WHITE ALBUM2<br>Summer Pockets REFLECTION BLUE  </p>
<p><del>[2020-04-30] メモリーズオフ-Innocent Fille- for Dearest</del><br><del>[2020-04-03] メモリーズオフ-Innocent Fille-</del><br><del>[2019-10-04] Ever17 -the out of infinity-</del><br><del>[2019-04-07] 絆きらめく恋いろは-椿恋歌-</del><br><del>[2019-04-06] 绊きらめく恋いろは</del><br><del>Summer Pockets</del><br><del>乙女理論とその後の周辺 -Belle Époque- Limited Edition</del><br><del>乙女理論とその周辺-Ecole de Paris-</del><br><del>ISLAND</del><br><del>メモリーズオフ6 Next Relation</del><br><del>メモリーズオフ6 〜T-wave〜</del><br><del>月に寄りそう乙女の作法2</del><br><del>魔法使いの夜</del><br><del>月に寄りそう乙女の作法</del><br><del>Fate/stay night [Heaven’s Feel]</del><br><del>美少女万華鏡-罪と罰の少女-</del><br><del>オトメ*ドメイン</del><br><del>纸の上の魔法使い</del><br><del>千恋*万花</del><br><del>遥かに仰ぎ、麗しの</del><br><del>ハルカナソラ</del><br><del>ヨスガノソラ</del> </p>
<hr>
<h2 id="N"><a href="#N" class="headerlink" title="N"></a>N</h2><p>氷菓<br>灼眼のシャナ<br>魔女の旅々<br>冴えない彼女の育てかた<br>やはり俺の青春ラブコメはまちがっている<br>アクセル・ワールド<br>デート·ア·ライブ<br>さくら荘のペットな彼女<br>Re:ゼロから始める異世界生活<br>NO GAME NO LIFE<br>クロックワーク・プラネット<br>月の珊瑚<br>鋼の大地<br>Garden of Avalon<br>ようこそ実力至上主義の教室へ<br>その日、朱音は空を飛んだ<br>狼と香辛料  </p>
<p><del>精霊使いの剣舞</del><br><del>機巧少女は傷つかない</del><br><del>ブラック・ブレット</del>      </p>
<hr>
<h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><p>百日紅 〜Miss HOKUSAI〜<br>ヴァイオレット・エヴァーガーデン 外伝 - 永遠と自動手記人形 -<br>劇場版 ヴァイオレット・エヴァーガーデン<br>Fate/stay night [Heaven’s Feel] III.Spring Song<br>僕のヒーローアカデミアTHE MOVIE ～2人の英雄～<br>銀河鉄道の夜<br>サマーウオーズ<br>眩～北斎の娘～<br>冴えない彼女の育てかたFine<br>劇場版「鬼滅の刃」無限列車編<br>泣きたい私は猫をかぶる<br>けいおん！  </p>
<p><del>[2020-05-22] 花咲くいろは HOME SWEET HOME</del><br><del>[2020-05-02] Re:ゼロから始める異世界生活 氷結の絆</del><br><del>[2020-05-01] Re:ゼロから始める異世界生活 Memory Snow</del><br><del>[2020-04-28] 劇場版 響け！ユーフォニアム～誓いのフィナーレ～</del><br><del>[2020-04-26] リズと青い鳥</del><br><del>[2020-04-14] 薄暮</del><br><del>[2020-03-02] たまこラブストーリー</del><br><del>コードギアス 復活のルルーシュ</del><br><del>名探偵コナン 紺青の拳</del><br><del>Fate/stay night [Heaven’s Feel] II.lost butterfly</del><br><del>夏目友人帳～うつせみに結ぶ～</del><br><del>コードギアス 反逆のルルーシュⅢ 皇道</del><br><del>コードギアス 反逆のルルーシュⅡ 叛道</del><br><del>コードギアス 反逆のルルーシュⅠ 興道</del><br><del>君の膵臓をたべたい</del><br><del>さよならの朝に約束の花をかざろう</del><br><del>名探偵コナン ゼロの執行人</del><br><del>文豪ストレイドッグス DEAD APPLE</del><br><del>中二病でも恋がしたい -Take On Me-</del><br><del>ご注文はうさぎですか?? ～Dear My Sister～</del><br><del>Fate/stay night [Heaven’s Feel] I.presage flower</del><br><del>No Game No Life: Zero</del><br><del>打ち上げ花火、下から見るか？横から見るか？</del><br><del>深夜食堂</del><br><del>プリズマ☆イリヤ 雪下の誓い</del><br><del>ソードアート・オンライン -オーディナル・スケール-</del><br><del>名探偵コナン から紅の恋歌</del><br><del>君の名は</del><br><del>聲の形</del><br><del>アクセル・ワールド INFINITE∞BURST</del>  </p>
<hr>
<h2 id="T"><a href="#T" class="headerlink" title="T"></a>T</h2><p>高嶺の花<br>ツバキ文具店～鎌倉代書屋物語～<br>深夜食堂<br>孤独のグルメ<br>ワカコ酒<br>パンとスープとネコ日和<br>きょうの猫村さん<br>吉祥寺だけが住みたい街ですか？<br>北の国から<br>1リットルの涙  </p>
<p><del>[2020-05-28] dele</del><br><del>[2020-05-13] 侠飯〜おとこめし〜</del><br><del>[2020-05-04] 刑事ゼロ</del><br><del>[2020-04-18] 絶メシロード</del><br><del>[2020-03-17] ひとりキャンプで食って寝る</del><br><del>[2020-03-04] グランメゾン東京</del><br><del>Game of Thrones</del>  </p>
]]></content>
  </entry>
  <entry>
    <title>常用备忘</title>
    <url>/1970/01/01/0001_%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p><img src="..%5C%E6%A1%9C%E5%B0%8F%E8%B7%AF%E3%83%AB%E3%83%8A.png" alt="Runa"><br>待整理</p>
<span id="more"></span>

<h2 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h2><p><a href="https://developer.android.google.cn/studio/command-line/adb?hl=zh_cn">https://developer.android.google.cn/studio/command-line/adb?hl=zh_cn</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb push /../.. /sdcard/..</span><br><span class="line"></span><br><span class="line">adb shell pm list packages | find &quot;example&quot;</span><br><span class="line"></span><br><span class="line">adb shell pm path com.example.myapplication</span><br><span class="line"></span><br><span class="line">adb pull /data/app/com.example.myapplication/base.apk</span><br><span class="line"></span><br><span class="line">adb install base.apk</span><br></pre></td></tr></table></figure>

<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line"></span><br><span class="line">git pull origin master --allow-unrelated-histories</span><br><span class="line"></span><br><span class="line">git commit --amend -m &quot;新的提交信息&quot;</span><br><span class="line"></span><br><span class="line">git log --oneline --decorate --graph --all</span><br></pre></td></tr></table></figure>

<h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">阿里云</td>
<td align="center"><a href="http://mirrors.aliyun.com/pypi/simple">http://mirrors.aliyun.com/pypi/simple</a></td>
</tr>
<tr>
<td align="center">豆瓣</td>
<td align="center"><a href="http://pypi.douban.com/simple">http://pypi.douban.com/simple</a></td>
</tr>
<tr>
<td align="center">清华</td>
<td align="center"><a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></td>
</tr>
<tr>
<td align="center">中科大</td>
<td align="center"><a href="http://pypi.mirrors.ustc.edu.cn/simple">http://pypi.mirrors.ustc.edu.cn/simple</a></td>
</tr>
<tr>
<td align="center">华科大</td>
<td align="center"><a href="http://pypi.hustunique.com/">http://pypi.hustunique.com</a></td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install django -i https://mirrors.aliyun.com/pypi/simple</span><br><span class="line">pip freeze &gt; requirements.txt   </span><br><span class="line">pip install -r requirements</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>adb</tag>
      </tags>
  </entry>
  <entry>
    <title>pip 备忘</title>
    <url>/2019/12/20/0010_pip_note/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>pip</tag>
      </tags>
  </entry>
  <entry>
    <title>HAL库备忘</title>
    <url>/2020/03/03/HAL%E5%BA%93%E5%A4%87%E5%BF%98/</url>
    <content><![CDATA[<p>记录HAL库相关</p>
<span id="more"></span>
<h1 id="串口输出重定向"><a href="#串口输出重定向" class="headerlink" title="串口输出重定向"></a>串口输出重定向</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputc</span><span class="params">(<span class="keyword">int</span> ch, FILE *f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  HAL_UART_Transmit(&amp;huart1, (<span class="keyword">uint8_t</span> *)&amp;ch, <span class="number">1</span>, <span class="number">0xffff</span>);</span><br><span class="line">  <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdarg.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USART2_TXBUF_SIZE_MAX 1024</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u2_printf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *format, ...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    va_list args;</span><br><span class="line">    <span class="keyword">uint32_t</span> length;</span><br><span class="line">    <span class="keyword">uint8_t</span> txbuf[USART2_TXBUF_SIZE_MAX] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    va_start(args, format);</span><br><span class="line">    length = vsnprintf((<span class="keyword">char</span> *)txbuf, <span class="keyword">sizeof</span>(txbuf), (<span class="keyword">char</span> *)format, args);</span><br><span class="line">    va_end(args); </span><br><span class="line">    HAL_UART_Transmit(&amp;huart2, (<span class="keyword">uint8_t</span> *)txbuf, length, HAL_MAX_DELAY);</span><br><span class="line">    <span class="built_in">memset</span>(txbuf, <span class="number">0</span>, USART2_TXBUF_SIZE_MAX);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="更新事件中断"><a href="#更新事件中断" class="headerlink" title="更新事件中断"></a>更新事件中断</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_TIM_PeriodElapsedCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">if</span> (htim-&gt;Instance == TIM6)</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>HAL</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO搭建</title>
    <url>/2021/04/28/HEXO%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<ol>
<li><p>安装 Node JS</p>
<p><a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p>
</li>
<li><p>安装 GIt</p>
<p><a href="https://www.git-scm.com/download/">https://www.git-scm.com/download/</a></p>
</li>
<li><p>安装 Hexo</p>
</li>
<li></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo@4.2.0</span><br><span class="line"></span><br><span class="line">hexo init sakura115942</span><br><span class="line"></span><br><span class="line">cd sakura115942</span><br><span class="line"></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line">根目录下的 _config.yml</span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository:</span><br><span class="line">    github: git@github.com:sakura115942/sakura115942.github.io.git</span><br><span class="line">    gitee: git@gitee.com:sakura115942/sakura115942.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line">hexo deploy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------------------------</span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line">git checkout -b source</span><br><span class="line">git add -A</span><br><span class="line">git commit -m &quot;init blog&quot;</span><br><span class="line">git remote add origin git@github.com:sakura115942/sakura115942.github.io.git</span><br><span class="line">git push origin source</span><br><span class="line"></span><br><span class="line">git clone -b source git@github.com:sakura115942/sakura115942.github.io.git</span><br><span class="line"></span><br><span class="line">git clone git@github.com:sakura115942/sakura115942.github.io.git</span><br></pre></td></tr></table></figure>









<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>
]]></content>
  </entry>
  <entry>
    <title>Linux定时任务</title>
    <url>/2020/05/03/Linux%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logging.basicConfig(level=logging.INFO,</span><br><span class="line">                    datefmt=<span class="string">&#x27;%Y/%m/%d %H:%M:%S&#x27;</span>,</span><br><span class="line">                    <span class="built_in">format</span>=<span class="string">&#x27;[%(asctime)s] [%(levelname)s]: %(message)s&#x27;</span>)</span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    logger.info(<span class="string">&#x27;info message&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">* * * * * python3 /root/test.py &amp;&gt;&gt; /root/test.log</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title>STM32_HAL_UART_CODE</title>
    <url>/2020/06/28/STM32-HAL-UART-CODE/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Android课堂笔记 ()</title>
    <url>/2020/03/11/android-note-0/</url>
    <content><![CDATA[<h1 id="Android开发概述"><a href="#Android开发概述" class="headerlink" title="Android开发概述"></a>Android开发概述</h1><h2 id="什么是Android"><a href="#什么是Android" class="headerlink" title="什么是Android"></a>什么是Android</h2><p>Android（读音：英：[‘ændrɔɪd]，美：[ˈænˌdrɔɪd]），中文常译作安卓或安致[15]，是一个基于Linux内核的开放源代码移动操作系统，由谷歌（Google）成立的开放手持设备联盟持续领导与开发，主要设计用于触摸屏移动设备如智能手机和平板电脑与其他便携式设备。</p>
<span id="more"></span>

<h2 id="Android的起源"><a href="#Android的起源" class="headerlink" title="Android的起源"></a>Android的起源</h2><p>Android Inc.于2003年10月由安迪·鲁宾、利奇·米纳尔（Rich Miner）、尼克·席尔斯（Nick Sears）、克里斯·怀特（Chris White）在加州帕罗奥图创建。Android最初由安迪·鲁宾等人开发制作，最初开发这个系统的早期方向是创建一个数字相机的先进操作系统，但是后来发现市场需求不够大，加上智能手机市场快速成长，于是Android成为一款面向智能手机的操作系统。于2005年7月11日Android Inc.被美国科技企业Google收购。</p>
<h2 id="Android的体系结构"><a href="#Android的体系结构" class="headerlink" title="Android的体系结构"></a>Android的体系结构</h2><p><img src="1109px-Android-System-Architecture.svg.png" alt="AndroidSystemArchitecture"></p>
<h2 id="Android调试桥-ADB"><a href="#Android调试桥-ADB" class="headerlink" title="Android调试桥 (ADB)"></a>Android调试桥 (ADB)</h2><p>Android 调试桥 (adb) 是一种功能多样的命令行工具，可让您与设备进行通信。adb 命令可用于执行各种设备操作（例如安装和调试应用），并提供对 Unix shell（可用来在设备上运行各种命令）的访问权限。它是一种客户端-服务器程序，包括以下三个组件：</p>
<ul>
<li>客户端：用于发送命令。客户端在开发计算机上运行。您可以通过发出 adb 命令来从命令行终端调用客户端。</li>
<li>守护进程 (adbd)：在设备上运行命令。守护进程在每个设备上作为后台进程运行。</li>
<li>服务器：管理客户端和守护进程之间的通信。服务器在开发机器上作为后台进程运行。<br>adb 包含在 Android SDK 平台工具软件包中。您可以使用 SDK 管理器下载此软件包，该管理器会将其安装在 android_sdk/platform-tools/ 下。或者，如果您需要独立的 Android SDK 平台工具软件包，可以<a href="https://developer.android.google.cn/studio/releases/platform-tools"><em>点击此处进行下载</em></a>。</li>
</ul>
<h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p>SDK包含一套全面的开发工具，包括调试器、函数库、基于虚拟机镜像的仿真器、文档，示例代码和教程。最初，Google支持的集成开发环境（IDE）是使用Android开发工具（ADT）插件的Eclipse；在2014年12月，Google基于IntelliJ IDEA而发布Android Studio，作为Android应用程序开发的主要IDE。其他可用的开发工具，包括应用程序的本地开发包（NDK），或是用于C或C++中的扩展，MIT应用开发者，那是让新手程序员的视觉环境，以及各种跨平台移动应用程序框架。2014年1月，Google推出了一个基于Apache Cordova的框架，把Google Chrome、HTML5及网络应用程序移植到Android，包装于本机应用程序的外壳中。</p>
<h1 id="数据库简介"><a href="#数据库简介" class="headerlink" title="数据库简介"></a>数据库简介</h1><h2 id="什么是数据库"><a href="#什么是数据库" class="headerlink" title="什么是数据库"></a>什么是数据库</h2><p><strong>数据库</strong> 是按照 <strong>数据结构</strong> 来组织、存储和管理数据的仓库”。是一个长期存储在计算机内的、有组织的、可共享的、统一管理的大量数据的集合。<br>数据库是以一定方式储存在一起、能与多个用户共享、具有尽可能小的冗余度、与应用程序彼此独立的数据集合，可视为 <strong>电子化的文件柜</strong> ——存储电子文件的处所，用户可以对文件中的数据进行新增、查询、更新、删除等操作。</p>
<h3 id="数据库的基础知识"><a href="#数据库的基础知识" class="headerlink" title="数据库的基础知识"></a>数据库的基础知识</h3><p>数据库系统由以下三部分组成：</p>
<ul>
<li>数据库实体</li>
<li>数据库管理系统</li>
<li>数据库应用程序</li>
</ul>
<p>SQL语言是一种数据库查询语言和程序设计语言，它是一种关系型数据库语言，主要用于管理数据库中的数据，如存取数据、查询数据、更新数据等。关系型数据库语言由四部分组成：</p>
<ul>
<li>数据定义语言 (DDL)</li>
<li>数据操作语言 (DML)</li>
<li>数据查询语言 (DQL)</li>
<li>数据控制语言 (DCL)</li>
</ul>
<h3 id="IP-网络地址-和-port-端口-的概念"><a href="#IP-网络地址-和-port-端口-的概念" class="headerlink" title="IP (网络地址) 和 port (端口) 的概念"></a>IP (网络地址) 和 port (端口) 的概念</h3><ul>
<li>ip是用于区分网络上不同的设备</li>
<li>port是用于区分同一设备上不同的网络应用程序</li>
</ul>
<h3 id="cmd-控制台命令"><a href="#cmd-控制台命令" class="headerlink" title="cmd 控制台命令"></a>cmd 控制台命令</h3><p>在目录进行操作</p>
<ul>
<li>操作目录（概念）</li>
<li>执行程序</li>
<li>查看目录内容</li>
<li>改变操作目录</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">dir</span></span><br><span class="line"><span class="variable">$</span> <span class="built_in">cd</span> ..</span><br><span class="line"><span class="variable">$</span> <span class="built_in">cd</span> c:\user\admin\desktop</span><br></pre></td></tr></table></figure>

<ul>
<li>切换盘符</li>
<li>绝对路径和相对路径</li>
</ul>
<h3 id="启动和停止-MySQL-数据库系统"><a href="#启动和停止-MySQL-数据库系统" class="headerlink" title="启动和停止 MySQL 数据库系统"></a>启动和停止 MySQL 数据库系统</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span> net stop mysql</span><br><span class="line"><span class="variable">$</span> net <span class="built_in">start</span> mysql</span><br></pre></td></tr></table></figure>

<h2 id="数据库的使用"><a href="#数据库的使用" class="headerlink" title="数据库的使用"></a>数据库的使用</h2><h3 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span> mysql <span class="literal">-V</span></span><br><span class="line"><span class="variable">$</span> mysql <span class="literal">-h</span> localhost <span class="literal">-P</span> <span class="number">3306</span> <span class="literal">-u</span> root <span class="literal">-p</span></span><br><span class="line">Enter password:******</span><br></pre></td></tr></table></figure>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; status</span><br><span class="line">mysql&gt; <span class="built_in">select</span> version();</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br></pre></td></tr></table></figure>

<h3 id="数据库创建和删除"><a href="#数据库创建和删除" class="headerlink" title="数据库创建和删除"></a>数据库创建和删除</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE android_class_demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> android_class_demo;</span><br></pre></td></tr></table></figure>
<h4 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">USE android_class_demo</span><br></pre></td></tr></table></figure>
<h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE android_class_demo;</span><br></pre></td></tr></table></figure>
<h4 id="查看已有数据库"><a href="#查看已有数据库" class="headerlink" title="查看已有数据库"></a>查看已有数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> android_class_demo <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> django_mysql       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> python             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> student            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h3 id="表的创建和删除"><a href="#表的创建和删除" class="headerlink" title="表的创建和删除"></a>表的创建和删除</h3><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><p><strong>可以通过 AUTO_INCREMENT 设置主键自增 UNIQUE 数据唯一</strong><br><strong>反引号只用于 字段名 或 表名</strong><br><strong>字符串指用单引号(‘’’)或双引号(‘“’)引起来的字符序列。</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student` (</span><br><span class="line">    `id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `gender` <span class="type">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">    `age` TINYINT,</span><br><span class="line">    `class` <span class="type">VARCHAR</span>(<span class="number">64</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `scores` (</span><br><span class="line">    `id` <span class="type">INT</span>,</span><br><span class="line">    `course` <span class="type">VARCHAR</span>(<span class="number">64</span>),</span><br><span class="line">    `score` <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `meal_card` (</span><br><span class="line">    `id` <span class="type">INT</span>,</span><br><span class="line">    `cardnum` <span class="type">VARCHAR</span>(<span class="number">8</span>),</span><br><span class="line">    `balance` <span class="type">SMALLINT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `courses` (</span><br><span class="line">    `course` <span class="type">VARCHAR</span>(<span class="number">64</span>),</span><br><span class="line">    `t_name` <span class="type">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `demo` (</span><br><span class="line">    `id` <span class="type">INT</span> COMMENT <span class="string">&#x27;姓名&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> demo;</span><br></pre></td></tr></table></figure>
<h4 id="查看表"><a href="#查看表" class="headerlink" title="查看表"></a>查看表</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> demo</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+------------------------------+</span><br><span class="line">| Tables_in_android_class_demo |</span><br><span class="line">+------------------------------+</span><br><span class="line">| meal_card                    |</span><br><span class="line">| score                        |</span><br><span class="line">| student                      |</span><br><span class="line">+------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<h4 id="修改已存在表字段"><a href="#修改已存在表字段" class="headerlink" title="修改已存在表字段"></a>修改已存在表字段</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> demo <span class="keyword">DROP</span> num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> demo <span class="keyword">ADD</span> num <span class="type">INT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> demo CHANGE num num <span class="type">CHAR</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> demo MODIFY num <span class="type">CHAR</span>(<span class="number">10</span>);</span><br></pre></td></tr></table></figure>

<h3 id="数据库的增删查改"><a href="#数据库的增删查改" class="headerlink" title="数据库的增删查改"></a>数据库的增删查改</h3><h4 id="增添数据"><a href="#增添数据" class="headerlink" title="增添数据"></a>增添数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student ( id, name, gender, age, class)</span><br><span class="line">                    <span class="keyword">VALUES</span></span><br><span class="line">                    ( <span class="number">1</span> , <span class="string">&#x27;request&#x27;</span>,   <span class="number">0</span> ,  <span class="number">20</span>, <span class="number">1807</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span> ( <span class="number">2</span> , <span class="string">&#x27;re1&#x27;</span>,   <span class="number">1</span> ,  <span class="number">20</span>, <span class="number">1807</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span> ( <span class="number">5</span> , <span class="string">&#x27;re2&#x27;</span>,   <span class="number">1</span> ,  <span class="number">22</span>, <span class="number">1807</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span> ( <span class="number">4</span> , <span class="string">&#x27;ddd&#x27;</span>,   <span class="number">1</span> ,  <span class="number">22</span>, <span class="number">1807</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> scores <span class="keyword">VALUES</span> ( <span class="number">1</span>, <span class="string">&#x27;math&#x27;</span>, <span class="number">50</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> scores <span class="keyword">VALUES</span> ( <span class="number">2</span>, <span class="string">&#x27;math&#x27;</span>, <span class="number">70</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> scores <span class="keyword">VALUES</span> ( <span class="number">3</span>, <span class="string">&#x27;java&#x27;</span>, <span class="number">75</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> scores <span class="keyword">VALUES</span> ( <span class="number">4</span>, <span class="string">&#x27;java&#x27;</span>, <span class="number">75</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> meal_card <span class="keyword">VALUES</span> ( <span class="number">1</span>, &quot;01180700&quot;, <span class="number">50</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> meal_card <span class="keyword">VALUES</span> ( <span class="number">5</span>, &quot;01180900&quot;, <span class="number">60</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> meal_card <span class="keyword">VALUES</span> ( <span class="number">7</span>, &quot;01181000&quot;, <span class="number">80</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> courses <span class="keyword">VALUES</span> ( <span class="string">&#x27;java&#x27;</span>, <span class="string">&#x27;hewei&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> gender<span class="operator">=</span><span class="number">0</span> <span class="keyword">AND</span> age<span class="operator">=</span><span class="number">20</span>;</span><br></pre></td></tr></table></figure>
<h4 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span> id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> age<span class="operator">&gt;=</span><span class="number">22</span> <span class="keyword">OR</span> gender<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> age <span class="keyword">LIKE</span> <span class="string">&#x27;%2&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> name, class <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> id <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> scores <span class="keyword">WHERE</span> course<span class="operator">=</span>&quot;math&quot; <span class="keyword">AND</span> score<span class="operator">&gt;=</span><span class="number">60</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> name, class <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> id <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> scores</span><br><span class="line"><span class="keyword">WHERE</span> course <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> course <span class="keyword">FROM</span> courses <span class="keyword">WHERE</span> t_name<span class="operator">=</span>&quot;hewei&quot;));</span><br><span class="line"># 笛卡尔</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> meal_card,student <span class="keyword">where</span> meal_card.id<span class="operator">=</span>student.id;</span><br></pre></td></tr></table></figure>
<h4 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">UPDATE student <span class="keyword">SET</span> age<span class="operator">=</span><span class="number">50</span>, gender<span class="operator">=</span><span class="number">2</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<h3 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">INTO</span> OUTFILE <span class="string">&#x27;D:/student.txt&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android</category>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>git 笔记</title>
    <url>/2019/12/24/git%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>记录 git 相关</p>
<span id="more"></span>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://git-scm.com/downloads">下载地址</a>  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install git</span><br><span class="line"></span><br><span class="line">yum -y install git</span><br><span class="line"></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span></span><br><span class="line"></span><br><span class="line">git config --global user.email username@example.com</span><br><span class="line"></span><br><span class="line">git config --list --show-origin</span><br></pre></td></tr></table></figure>
<h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><p>仓库的建立有两种方法：</p>
<ul>
<li>本地初始化</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<ul>
<li>在远程新建仓库后克隆，或者是克隆已有仓库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:git/git.git</span><br></pre></td></tr></table></figure>

<h1 id="暂存"><a href="#暂存" class="headerlink" title="暂存"></a>暂存</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status</span><br><span class="line"></span><br><span class="line">git add *.py</span><br></pre></td></tr></table></figure>
<p>当目标文件已跟踪时，可以使用-p，在暂存时查看目标文件变化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add -p</span><br></pre></td></tr></table></figure>

<h1 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br></pre></td></tr></table></figure>
<p>将所有已跟踪文件直接 commit，跳过 stage</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -a -m <span class="string">&quot;first commit&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure>
<h1 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -- README.md</span><br><span class="line"></span><br><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure>

<h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><p>创建分支，然后切换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch develop</span><br><span class="line"></span><br><span class="line">git checkout develop</span><br></pre></td></tr></table></figure>
<p>快速切换创建分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b develop</span><br></pre></td></tr></table></figure>
<p>删除分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -d develop</span><br></pre></td></tr></table></figure>

<h1 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git merge develop</span><br></pre></td></tr></table></figure>

<h1 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%h %s&quot;</span> --graph</span><br></pre></td></tr></table></figure>
<p>尚未暂存的改动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure>
<p>暂存文件和最后一次提交的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff --staged</span><br></pre></td></tr></table></figure>

<h1 id="远程"><a href="#远程" class="headerlink" title="远程"></a>远程</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;username@example.com&quot;</span></span><br><span class="line"></span><br><span class="line">git remote add origin</span><br><span class="line"></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<h1 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h1><p><a href="https://github.com/github/gitignore">https://github.com/github/gitignore</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">venv/</span><br><span class="line">.idea/</span><br><span class="line">__pycache__/</span><br><span class="line"></span><br><span class="line">*.py[cod]</span><br><span class="line">mysettings.py</span><br><span class="line"></span><br><span class="line">!*.exe</span><br></pre></td></tr></table></figure>
<p>在目标文件被忽略的时候，可以用 -f 强制添加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add -f object.py</span><br></pre></td></tr></table></figure>

<h1 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h1><p><a href="https://git-scm.com/docs">官方参考</a>  </p>
<p><a href="https://github.com/521xueweihan/git-tips">Git的奇技淫巧🙈</a></p>
]]></content>
      <categories>
        <category>VCS</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>h2</title>
    <url>/2021/04/20/h2/</url>
    <content><![CDATA[<p><img src="%E6%94%BF%E6%B2%BB%E7%B4%A0%E5%85%BB.jpg" alt="alt"></p>
<p><img src="image-20210427134819716.png" alt="image-20210427134819716"></p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/01/17/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hello3</title>
    <url>/2021/04/26/hello3/</url>
    <content><![CDATA[<p><img src="66675067_p0.jpg" alt="alt"></p>
]]></content>
  </entry>
  <entry>
    <title>mysql安装注意事项</title>
    <url>/2020/08/30/mysql%E5%AE%89%E8%A3%85%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<p>记录：8月17在阿里云上安装MySQL注意事项<br>1.如果MySQL没有启动，则重启服务器，安装教程参考菜鸟MySQL教程<br>2.MySQL5.7以上版本会生成默认密码，需要前往usr/log/mysql/mysqld查看日志<br>3.使用这个密码登陆后需要修改，否则无法进行其他操作<br>4.远程连接该数据库的时候，需要开放服务器提供商的防火墙端口以及在MySQL里面设置可连接的ip</p>
]]></content>
  </entry>
  <entry>
    <title>python生成式</title>
    <url>/2020/03/26/python%E7%94%9F%E6%88%90%E5%BC%8F/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>队列的实现</title>
    <url>/2020/04/09/queue-realize/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>requests的基本使用</title>
    <url>/2020/01/22/requests%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla&#x27;</span>&#125;</span><br><span class="line">params = &#123;<span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;value&#x27;</span>&#125;</span><br><span class="line">data=&#123;<span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;value&#x27;</span>&#125;</span><br><span class="line">cookies = &#123;&#125;</span><br><span class="line">r = requests.get(<span class="string">&#x27;https://httpbin.org/get&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = requests.post(<span class="string">&#x27;https://httpbin.org/post&#x27;</span>, data=data)</span><br><span class="line"></span><br><span class="line">r.encoding = r.apparent_encoding</span><br><span class="line"><span class="built_in">print</span>(r.status_code)</span><br><span class="line"><span class="built_in">print</span>(r.url)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line"><span class="built_in">print</span>(r.json)</span><br></pre></td></tr></table></figure>

<h1 id="session"><a href="#session" class="headerlink" title="session"></a>session</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://requests.readthedocs.io/en/master/">https://requests.readthedocs.io/en/master/</a></p>
]]></content>
  </entry>
  <entry>
    <title>scrapy shell</title>
    <url>/2020/03/20/scrapy-shell/</url>
    <content><![CDATA[<p><a href="https://docs.scrapy.org/en/latest/topics/shell.html">https://docs.scrapy.org/en/latest/topics/shell.html</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ scrapy shell</span><br><span class="line"></span><br><span class="line">$ scrapy shell ./path/to/file.html</span><br><span class="line"></span><br><span class="line">$ scrapy shell -s USER_AGENT=<span class="string">&quot;Mozilla&quot;</span> <span class="string">&quot;https://www.douban.com/doulist/43395943/&quot;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">&#x27;https://www.douban.com/doulist/43395943/&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;user-Agent&#x27;</span>:<span class="string">&#x27;Mozilla&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">cookis = <span class="string">&quot;_gd=123456789; _gid=123456789&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 str 的 cookie 解析成 dict</span></span><br><span class="line">cookies = <span class="built_in">dict</span>([item.split(<span class="string">&quot;=&quot;</span>, <span class="number">1</span>) <span class="keyword">for</span> item <span class="keyword">in</span> cookie.split(<span class="string">&quot;; &quot;</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建 Request 对象</span></span><br><span class="line">request = scrapy.Request(url, cookies=cookies, headers=headers)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发起请求</span></span><br><span class="line">fetch(request)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用浏览器查看 response</span></span><br><span class="line">view(response)</span><br><span class="line"></span><br><span class="line"><span class="comment"># response (type byte)</span></span><br><span class="line">response.body</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬取pixiv(根据画师)</title>
    <url>/2020/03/19/scrapy%E7%88%AC%E5%8F%96pixiv(%E6%A0%B9%E6%8D%AE%E7%94%BB%E5%B8%88)/</url>
    <content><![CDATA[<p><img src="78714767_p0.jpg" alt="alt"></p>
<span id="more"></span>

<p>爬取 P站画师作品的时候的几个点：</p>
<ul>
<li><p>由于暂时没有去了解 scrapy 的socks5代理，所以需要本地将代理挂为全局代理。</p>
</li>
<li><p>原本之前P站模拟登陆非常简单，只需要从登陆页面获取参数即可，现在添加了 Google验证，暂时不去考虑这个问题，先用cookie登陆。</p>
</li>
<li><p>图片有的为动态图，并不是直接的动态图，而是分成每一帧后压缩。需要抓取链接下载整个压缩包解压后合成动态图。</p>
</li>
<li><p>有的图片为多张，需要获取具体张数后生成url再请求。</p>
</li>
<li><p>下载原图方面和以前一样只需要加个 referer  </p>
</li>
<li><p>imageio 合成后的 gif 占用较大，需要的话 imageio 官方文档中有方法可以压缩图片。</p>
</li>
</ul>
<p>由于动图所需要下载的zip并不适用于 ImagePipeline，所以全部改用 FilePipeline。从官方文档来看，ImagePipeline 有缩略图，检查图片大小，转换图片格式的功能。</p>
<p>PIXIV/run.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.cmdline <span class="keyword">import</span> execute</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    user_id = <span class="string">&#x27;216403&#x27;</span></span><br><span class="line">    command = <span class="string">f&#x27;scrapy crawl author -a user_id=<span class="subst">&#123;user_id&#125;</span>&#x27;</span></span><br><span class="line">    execute(command.split(<span class="string">&#x27; &#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>入口文件中填入画师 id 即可。调试时选用的是 しらび 的 id，即 りゅうおうのおしごと!（龙王的工作！）插画和 Fate/Grand Order 巴御前的画师</p>
<p>PIXIV\items.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArtworksItem</span>(<span class="params">scrapy.Item</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = scrapy.Field()              <span class="comment"># 插画 id</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    description = scrapy.Field()     <span class="comment"># 描述</span></span><br><span class="line">    illust_type = scrapy.Field()     <span class="comment"># 插画 类型 0：插画 1：漫画 2：gif</span></span><br><span class="line">    author = scrapy.Field()</span><br><span class="line">    tags = scrapy.Field()</span><br><span class="line"></span><br><span class="line">    create_date = scrapy.Field()</span><br><span class="line">    upload_date = scrapy.Field()</span><br><span class="line"></span><br><span class="line">    width = scrapy.Field()</span><br><span class="line">    height = scrapy.Field()</span><br><span class="line">    bookmark_count = scrapy.Field()  <span class="comment"># 收藏</span></span><br><span class="line">    like_count = scrapy.Field()      <span class="comment"># 赞</span></span><br><span class="line">    comment_count = scrapy.Field()   <span class="comment"># 评论数量</span></span><br><span class="line">    view_count = scrapy.Field()      <span class="comment"># 浏览量</span></span><br><span class="line"></span><br><span class="line">    referer = scrapy.Field()</span><br><span class="line"></span><br><span class="line">    thumb_url = scrapy.Field()       <span class="comment"># 插画各种尺寸链接</span></span><br><span class="line">    small_url = scrapy.Field()</span><br><span class="line">    regular_url = scrapy.Field()</span><br><span class="line">    original_url = scrapy.Field()</span><br><span class="line"></span><br><span class="line">    page_count = scrapy.Field()      <span class="comment"># 插画张数</span></span><br><span class="line">    gif_zip_url = scrapy.Field()     <span class="comment"># gif图包地址</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>item 中主要是插画的各种信息字段。</p>
<p>PIXIV\spiders\author.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> ..items <span class="keyword">import</span> ArtworksItem</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment"># https://i.pximg.net/img-zip-ugoira/img/2014/09/15/04/28/24/45988308_ugoira600x600.zip</span></span><br><span class="line"><span class="comment"># 如果是gif 调用api 获取 api response 后解析body 获得 gif zip</span></span><br><span class="line"><span class="comment"># https://www.pixiv.net/ajax/illust/45988308/ugoira_meta 的地址</span></span><br><span class="line">cookie = <span class="string">&#x27;填cookie&#x27;</span></span><br><span class="line">cookies = <span class="built_in">dict</span>([item.split(<span class="string">&quot;=&quot;</span>, <span class="number">1</span>) <span class="keyword">for</span> item <span class="keyword">in</span> cookie.split(<span class="string">&quot;; &quot;</span>)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthorSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;author&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;pixiv.net&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span>(<span class="params">self</span>):</span></span><br><span class="line">        user_id = <span class="built_in">getattr</span>(self, <span class="string">&#x27;user_id&#x27;</span>)</span><br><span class="line">        url = <span class="string">f&#x27;https://www.pixiv.net/ajax/user/<span class="subst">&#123;user_id&#125;</span>/profile/all&#x27;</span></span><br><span class="line">        <span class="keyword">yield</span> scrapy.Request(url, callback=self.parse, cookies=cookies)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        data = json.loads(response.text)</span><br><span class="line">        illusts = data[<span class="string">&#x27;body&#x27;</span>][<span class="string">&#x27;illusts&#x27;</span>].keys()</span><br><span class="line">        manga = data[<span class="string">&#x27;body&#x27;</span>][<span class="string">&#x27;manga&#x27;</span>].keys()</span><br><span class="line">        _<span class="built_in">all</span> = <span class="built_in">list</span>(illusts) + <span class="built_in">list</span>(manga)</span><br><span class="line">        <span class="keyword">for</span> artworks_id <span class="keyword">in</span> _<span class="built_in">all</span>:</span><br><span class="line">            url = <span class="string">f&#x27;https://www.pixiv.net/artworks/<span class="subst">&#123;artworks_id&#125;</span>&#x27;</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url, callback=self.parse_artworks)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_artworks</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        meta = json.loads(response.xpath(<span class="string">&#x27;//meta[@id=&quot;meta-preload-data&quot;]/@content&#x27;</span>).get())</span><br><span class="line">        _ = meta[<span class="string">&#x27;illust&#x27;</span>]</span><br><span class="line">        detail = _[<span class="built_in">list</span>(_)[<span class="number">0</span>]]</span><br><span class="line">        item = ArtworksItem()</span><br><span class="line">        item[<span class="string">&#x27;id&#x27;</span>] = detail.get(<span class="string">&#x27;id&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;title&#x27;</span>] = detail.get(<span class="string">&#x27;title&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;description&#x27;</span>] = detail.get(<span class="string">&#x27;description&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;author&#x27;</span>] = detail.get(<span class="string">&#x27;userName&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        tags = detail.get(<span class="string">&#x27;userIllusts&#x27;</span>, <span class="literal">None</span>).get(item[<span class="string">&#x27;id&#x27;</span>], <span class="literal">None</span>).get(<span class="string">&#x27;tags&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;tags&#x27;</span>] = <span class="string">&#x27; &#x27;</span>.join(tags)</span><br><span class="line">        item[<span class="string">&#x27;illust_type&#x27;</span>] = detail.get(<span class="string">&#x27;illustType&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;create_date&#x27;</span>] = detail.get(<span class="string">&#x27;createDate&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;upload_date&#x27;</span>] = detail.get(<span class="string">&#x27;uploadDate&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">        item[<span class="string">&#x27;width&#x27;</span>] = detail.get(<span class="string">&#x27;width&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;height&#x27;</span>] = detail.get(<span class="string">&#x27;width&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;bookmark_count&#x27;</span>] = detail.get(<span class="string">&#x27;bookmarkCount&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;like_count&#x27;</span>] = detail.get(<span class="string">&#x27;likeCount&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;comment_count&#x27;</span>] = detail.get(<span class="string">&#x27;commentCount&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;view_count&#x27;</span>] = detail.get(<span class="string">&#x27;viewCount&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">        item[<span class="string">&#x27;referer&#x27;</span>] = response.url</span><br><span class="line">        urls = detail.get(<span class="string">&#x27;urls&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> urls <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            item[<span class="string">&#x27;thumb_url&#x27;</span>] = urls.get(<span class="string">&#x27;thumb&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">            item[<span class="string">&#x27;small_url&#x27;</span>] = urls.get(<span class="string">&#x27;small&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">            item[<span class="string">&#x27;regular_url&#x27;</span>] = urls.get(<span class="string">&#x27;regular&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">            item[<span class="string">&#x27;original_url&#x27;</span>] = urls.get(<span class="string">&#x27;original&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item[<span class="string">&#x27;page_count&#x27;</span>] = detail.get(<span class="string">&#x27;pageCount&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> item[<span class="string">&#x27;illust_type&#x27;</span>] == <span class="number">2</span>:</span><br><span class="line">            url = <span class="string">&#x27;https://www.pixiv.net/ajax/illust/&#123;&#125;/ugoira_meta&#x27;</span>.<span class="built_in">format</span>(item[<span class="string">&#x27;id&#x27;</span>])</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url, callback=self.parse_gif, meta=&#123;<span class="string">&#x27;item&#x27;</span>: item&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_gif</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        data = json.loads(response.text)</span><br><span class="line">        gif_zip_url = data.get(<span class="string">&#x27;body&#x27;</span>, <span class="literal">None</span>).get(<span class="string">&#x27;originalSrc&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        item = response.meta[<span class="string">&#x27;item&#x27;</span>]</span><br><span class="line">        item[<span class="string">&#x27;gif_zip_url&#x27;</span>] = gif_zip_url</span><br><span class="line">        <span class="keyword">yield</span> item</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>spider 中要注意的点就是判断插画类型了，如果是 git 的话就要通过抓包出来的接口再一次请求，以获得 gif 图包的链接，所以在需要将 item 通过 meta 传递，直到所以信息收集完毕后 yield。  </p>
<p>此处可以直接填入浏览器中赋值的 cookie，dict([item.split(“=”, 1) for item in cookie.split(“; “)]) 会将其转化 dict。</p>
<p>PIXIV\pipelines.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Request</span><br><span class="line"><span class="keyword">from</span> scrapy.pipelines.files <span class="keyword">import</span> FilesPipeline</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> imageio</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="comment"># https://i.pximg.net/img-original/img/2019/12/23/00/18/37/78429594_p0.jpg</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PixivImagePipeline</span>(<span class="params">FilesPipeline</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_media_requests</span>(<span class="params">self, item, info</span>):</span></span><br><span class="line">        meta = &#123;<span class="string">&#x27;referer&#x27;</span>: item[<span class="string">&#x27;referer&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;item&#x27;</span>: item&#125;</span><br><span class="line">        page_count = item[<span class="string">&#x27;page_count&#x27;</span>]</span><br><span class="line">        original_url = item[<span class="string">&#x27;original_url&#x27;</span>]</span><br><span class="line">        illust_type = item[<span class="string">&#x27;illust_type&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> illust_type == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">yield</span> Request(item[<span class="string">&#x27;gif_zip_url&#x27;</span>], meta=meta)</span><br><span class="line">        <span class="keyword">if</span> page_count == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">yield</span> Request(url=original_url, meta=meta)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> [Request(original_url.replace(<span class="string">&#x27;p0&#x27;</span>, <span class="string">&#x27;p%d&#x27;</span> % _), meta=meta) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(page_count)]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">file_path</span>(<span class="params">self, request, response=<span class="literal">None</span>, info=<span class="literal">None</span></span>):</span></span><br><span class="line">        name = request.url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">        item = request.meta[<span class="string">&#x27;item&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;full/%s/%s&#x27;</span> % (item[<span class="string">&#x27;author&#x27;</span>], name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">item_completed</span>(<span class="params">self, results, item, info</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(item, <span class="built_in">dict</span>) <span class="keyword">or</span> self.files_result_field <span class="keyword">in</span> item.fields:</span><br><span class="line">            item[self.files_result_field] = [x <span class="keyword">for</span> ok, x <span class="keyword">in</span> results <span class="keyword">if</span> ok]</span><br><span class="line">        <span class="keyword">if</span> item[<span class="string">&#x27;illust_type&#x27;</span>] == <span class="number">2</span>:</span><br><span class="line">            file_paths = [x[<span class="string">&#x27;path&#x27;</span>] <span class="keyword">for</span> ok, x <span class="keyword">in</span> results <span class="keyword">if</span> ok]</span><br><span class="line">            base_path = <span class="string">&#x27;full/%s&#x27;</span> % item[<span class="string">&#x27;author&#x27;</span>]</span><br><span class="line">            unzip_path = base_path + <span class="string">&#x27;/%s&#x27;</span> % item[<span class="string">&#x27;author&#x27;</span>]</span><br><span class="line">            output_path = file_paths[<span class="number">1</span>].replace(<span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;gif&#x27;</span>)</span><br><span class="line">            zFile = zipfile.ZipFile(file_paths[<span class="number">0</span>], <span class="string">&quot;r&quot;</span>)</span><br><span class="line">            frames = zFile.namelist()</span><br><span class="line">            <span class="keyword">for</span> fileM <span class="keyword">in</span> zFile.namelist():</span><br><span class="line">                zFile.extract(fileM, unzip_path)</span><br><span class="line">            zFile.close()</span><br><span class="line">            frames = [imageio.imread(unzip_path + <span class="string">&#x27;/%s&#x27;</span> % image) <span class="keyword">for</span> image <span class="keyword">in</span> frames]</span><br><span class="line">            imageio.mimsave(output_path, frames, <span class="string">&#x27;GIF&#x27;</span>, duration=<span class="number">0</span>)</span><br><span class="line">            os.remove(file_paths[<span class="number">0</span>])</span><br><span class="line">            shutil.rmtree(unzip_path)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClearPipeline</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        item[<span class="string">&#x27;description&#x27;</span>] = re.sub(<span class="string">r&#x27;&lt;[^&gt;]*&gt;&#x27;</span>, <span class="string">&#x27; &#x27;</span>, item[<span class="string">&#x27;description&#x27;</span>]).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27; &#x27;</span>).replace(<span class="string">&#x27;\u3000&#x27;</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>ClearPipeline 负责清洗数据，因为获取的插画中的 description（描述） 字段 夹杂着 HTML 标签，此处通过正则去掉。<br>PixivImagePipeline 负责插画下载</p>
<ul>
<li><p>get_media_requests 主要是根据插画类型，进行相对应的请求，gif 的话就获取 item[‘gif_zip_url’] 的链接进行请求。多页的插画则是通过列表生成式构建 Request 后直接 yield from。</p>
</li>
<li><p>file_path 主要是返回图片的存储路径</p>
</li>
<li><p>item_completed 是对插画类型进行判断，如果是 gif 则解压下载好的 zip，然后通过 imageio 合成 gif。然后删除 zip 和用于合成的解压文件夹。</p>
</li>
</ul>
<p>可以加入存取数据库的 pipeline，爬取完成后可以读出相对应的字段，比如标签，来通过 WorldCloud 处理。</p>
<p>PIXIV\middlewares.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request, spider</span>):</span></span><br><span class="line">    referer = request.meta.get(<span class="string">&#x27;referer&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">if</span> referer <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        request.headers[<span class="string">&#x27;referer&#x27;</span>] = referer</span><br></pre></td></tr></table></figure>
<p>由于下载原图的时候需要加入 referer, 所以在 pipeline 中通过 meta 传递后，在 ScrapyDownloaderMiddleware 中进行处理。</p>
<p>PIXIV\settings.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">DEFAULT_REQUEST_HEADERS = &#123;</span><br><span class="line">  <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;en&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;user-Agent&#x27;</span>: <span class="string">&#x27;Mozilla&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class="line">   <span class="string">&#x27;SCRAPY.middlewares.ScrapyDownloaderMiddleware&#x27;</span>: <span class="number">543</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">&#x27;SCRAPY.pipelines.PixivImagePipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">   <span class="string">&#x27;SCRAPY.pipelines.ClearPipeline&#x27;</span>: <span class="number">305</span>,</span><br><span class="line">&#125;</span><br><span class="line">FILES_STORE = <span class="string">&#x27;.&#x27;</span></span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>Python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬取yande.re</title>
    <url>/2020/03/19/scrapy%E7%88%AC%E5%8F%96yande/</url>
    <content><![CDATA[<p>requirement</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pip install scrapy</span><br><span class="line"><span class="comment"># 用于存储信息</span></span><br><span class="line">$ pip install pymongo</span><br><span class="line"><span class="comment"># 用于生成缩略图</span></span><br><span class="line">$ pip install Pillow</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ scrapy startproject YANDE</span><br><span class="line">$ <span class="built_in">cd</span> YANDE</span><br><span class="line">$ scrapy genspider yande yande.re</span><br></pre></td></tr></table></figure>

<p>通过调用 scrapy.cmdline 中的 execute 来编写入口文件，就不需要每次启动 spider 的时候都通过终端输入 scrapy crawl yande -a tags=takeuchi_takashi，而且还可以通过 ide 进行调试。<br>YANDE\run.py  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.cmdline <span class="keyword">import</span> execute</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    tags = <span class="string">&#x27;takeuchi_takashi&#x27;</span></span><br><span class="line">    command = <span class="string">f&#x27;scrapy crawl yande -a tags=<span class="subst">&#123;tags&#125;</span>&#x27;</span></span><br><span class="line">    execute(command.split(<span class="string">&#x27; &#x27;</span>))</span><br></pre></td></tr></table></figure>

<p>YANDE\settings.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">&#x27;YANDE.pipelines.YandeImagePipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">   <span class="string">&#x27;YANDE.pipelines.MongoPipeline&#x27;</span>: <span class="number">301</span>,</span><br><span class="line">&#125;</span><br><span class="line">IMAGES_STORE = <span class="string">&#x27;.&#x27;</span></span><br><span class="line">IMAGES_THUMBS = &#123;</span><br><span class="line">    <span class="string">&#x27;small&#x27;</span>: (<span class="number">50</span>, <span class="number">50</span>),</span><br><span class="line">    <span class="string">&#x27;big&#x27;</span>: (<span class="number">270</span>, <span class="number">270</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MONGO_URI = <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">MONGO_DATABASE = <span class="string">&#x27;yande&#x27;</span></span><br></pre></td></tr></table></figure>

<p>YANDE\spiders\yande.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> YANDE.items <span class="keyword">import</span> YandeItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">YandeSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;yande&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;yande.re&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span>(<span class="params">self</span>):</span></span><br><span class="line">        tags = <span class="built_in">getattr</span>(self, <span class="string">&#x27;tags&#x27;</span>)</span><br><span class="line">        url = <span class="string">f&#x27;https://yande.re/post?tags=<span class="subst">&#123;tags&#125;</span>&#x27;</span></span><br><span class="line">        <span class="keyword">yield</span> scrapy.Request(url, callback=self.parse)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        next_page = response.xpath(<span class="string">&#x27;//a[@class=&quot;next_page&quot;]/@href&#x27;</span>).get()</span><br><span class="line">        <span class="keyword">if</span> next_page <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">yield</span> response.follow(next_page, callback=self.parse)</span><br><span class="line">        image_urls = response.xpath(<span class="string">&#x27;//a[@class=&quot;thumb&quot;]/@href&#x27;</span>).getall()</span><br><span class="line">        <span class="keyword">for</span> image_url <span class="keyword">in</span> image_urls:</span><br><span class="line">            <span class="keyword">yield</span> response.follow(image_url, callback=self.parse_image)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_image</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        item = YandeItem()</span><br><span class="line">        item[<span class="string">&#x27;image_id&#x27;</span>] = response.xpath(<span class="string">&#x27;//div[@id=&quot;stats&quot;]/ul/li/text()&#x27;</span>).re(<span class="string">r&#x27;Id: (\d+)&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        item[<span class="string">&#x27;image_url&#x27;</span>] = response.xpath(<span class="string">&#x27;//div[@class=&quot;content&quot;]/div/img/@src&#x27;</span>).get()</span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure>

<p>YANDE\items.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">YandeItem</span>(<span class="params">scrapy.Item</span>):</span></span><br><span class="line">    image_id = scrapy.Field()</span><br><span class="line">    image_url = scrapy.Field()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>YANDE\pipelines.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Request</span><br><span class="line"><span class="keyword">from</span> scrapy.pipelines.images <span class="keyword">import</span> ImagesPipeline</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">YandeImagePipeline</span>(<span class="params">ImagesPipeline</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_media_requests</span>(<span class="params">self, item, info</span>):</span></span><br><span class="line">        <span class="keyword">yield</span> Request(item[<span class="string">&#x27;image_url&#x27;</span>], meta=&#123;<span class="string">&#x27;image_id&#x27;</span>: item[<span class="string">&#x27;image_id&#x27;</span>]&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">file_path</span>(<span class="params">self, request, response=<span class="literal">None</span>, info=<span class="literal">None</span></span>):</span></span><br><span class="line">        image_id = request.meta[<span class="string">&#x27;image_id&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;full/%s.jpg&#x27;</span> % image_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MongoPipeline</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    collection_name = <span class="string">&#x27;yande_items&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, mongo_uri, mongo_db</span>):</span></span><br><span class="line">        self.mongo_uri = mongo_uri</span><br><span class="line">        self.mongo_db = mongo_db</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">from_crawler</span>(<span class="params">cls, crawler</span>):</span></span><br><span class="line">        <span class="keyword">return</span> cls(</span><br><span class="line">            mongo_uri=crawler.settings.get(<span class="string">&#x27;MONGO_URI&#x27;</span>),</span><br><span class="line">            mongo_db=crawler.settings.get(<span class="string">&#x27;MONGO_DATABASE&#x27;</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_spider</span>(<span class="params">self, spider</span>):</span></span><br><span class="line">        self.client = pymongo.MongoClient(self.mongo_uri)</span><br><span class="line">        self.db = self.client[self.mongo_db]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span>(<span class="params">self, spider</span>):</span></span><br><span class="line">        self.client.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        self.db[self.collection_name].insert_one(<span class="built_in">dict</span>(item))</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>scrapy</tag>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬取豆瓣Top250</title>
    <url>/2020/03/18/scrapy%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3Top250/</url>
    <content><![CDATA[<p>DOUBAN\run.py </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.cmdline <span class="keyword">import</span> execute</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    command = <span class="string">&#x27;scrapy crawl Top250 -o top250.csv&#x27;</span></span><br><span class="line">    execute(command.split(<span class="string">&#x27; &#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p>DOUBAN\spider\Top250.py </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> DOUBAN.items <span class="keyword">import</span> DoubanItem</span><br><span class="line"><span class="comment">#scrapy shell -s USER_AGENT=&quot;Mozilla&quot; &quot;https://movie.douban.com/top250&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Top250Spider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;Top250&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;douban.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;https://movie.douban.com/top250&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        next_page = response.xpath(<span class="string">&#x27;//span[@class=&quot;next&quot;]/a/@href&#x27;</span>).get()</span><br><span class="line">        <span class="keyword">if</span> next_page <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">yield</span> response.follow(next_page, callback=self.parse)</span><br><span class="line">        info = response.xpath(<span class="string">&#x27;//div[@class=&quot;info&quot;]&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> info:</span><br><span class="line">            item = DoubanItem()</span><br><span class="line">            item[<span class="string">&#x27;title&#x27;</span>] = each.xpath(<span class="string">&#x27;div[@class=&quot;hd&quot;]/a/span/text()&#x27;</span>).get()</span><br><span class="line">            item[<span class="string">&#x27;rating_num&#x27;</span>] = each.xpath(<span class="string">&#x27;.//span[@class=&quot;rating_num&quot;]/text()&#x27;</span>).get()</span><br><span class="line">            item[<span class="string">&#x27;quote&#x27;</span>] = each.xpath(<span class="string">&#x27;.//span[@class=&quot;inq&quot;]/text()&#x27;</span>).get()</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>DOUBAN\item.py </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanItem</span>(<span class="params">scrapy.Item</span>):</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    rating_num = scrapy.Field()</span><br><span class="line">    quote = scrapy.Field()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title>单向链表的实现</title>
    <url>/2020/02/09/singly-linked-list-realize/</url>
    <content><![CDATA[<h1 id="什么是链表"><a href="#什么是链表" class="headerlink" title="什么是链表"></a>什么是链表</h1><blockquote>
<p>链表（Linked list）是一种常见的基础数据结构，是一种线性表，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的指针(Pointer)。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而顺序表相应的时间复杂度分别是O(logn)和O(1)。</p>
</blockquote>
<span id="more"></span>
<blockquote>
<p>使用链表结构可以克服数组链表需要预先知道数据大小的缺点，链表结构可以充分利用计算机内存空间，实现灵活的内存动态管理。但是链表失去了数组随机读取的优点，同时链表由于增加了结点的指针域，空间开销比较大。</p>
</blockquote>
<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># simpleLinkedList.h</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _SIMPLELINKEDLIST_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _SIMPLELINKEDLIST_H</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; NodeType;</span><br><span class="line"></span><br><span class="line"><span class="function">NodeType* <span class="title">LinkedList_Create</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LinkedList_Insert</span><span class="params">(NodeType* linkedlist, <span class="keyword">int</span> num, <span class="keyword">int</span> pos)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LinkedList_NodeDelete</span><span class="params">(NodeType* linkedlist, <span class="keyword">int</span> pos)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LinkedList_Delete</span><span class="params">(NodeType* linkedlist)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LinkedList_Print</span><span class="params">(NodeType* linkedlist)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># simpleLinkedList.c</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;simpleLinkedList.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">NodeType* <span class="title">LinkedList_Create</span><span class="params">()</span></span>&#123;</span><br><span class="line">    NodeType* head = (NodeType*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NodeType));</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LinkedList_Insert</span><span class="params">(NodeType* linkedlist, <span class="keyword">int</span> num, <span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    NodeType *current = linkedlist;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;pos &amp;&amp; current)&#123;</span><br><span class="line">        current = current-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (current != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        NodeType *node = (NodeType*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NodeType));</span><br><span class="line">        node-&gt;value = num;</span><br><span class="line">        node-&gt;next = current-&gt;next;</span><br><span class="line">        current-&gt;next = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;insert error\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LinkedList_NodeDelete</span><span class="params">(NodeType* linkedlist, <span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    NodeType*last = linkedlist;</span><br><span class="line">    NodeType*current = linkedlist-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;pos &amp;&amp; current)&#123;</span><br><span class="line">        last = current;</span><br><span class="line">        current = current-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (current != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        last-&gt;next = current-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(current);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;delete error\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LinkedList_Delete</span><span class="params">(NodeType* linkedlist)</span></span>&#123;</span><br><span class="line">    NodeType* current = linkedlist;</span><br><span class="line">    NodeType* current_next = linkedlist-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (current)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">free</span>(current);</span><br><span class="line">        current = current_next;</span><br><span class="line">        <span class="keyword">if</span> (current_next)</span><br><span class="line">            current_next = current_next-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LinkedList_Print</span><span class="params">(NodeType* linkedlist)</span></span>&#123;</span><br><span class="line">    NodeType *node = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (linkedlist == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    node = linkedlist-&gt;next;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n输出链表\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (node)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, node-&gt;value);</span><br><span class="line">        node = node-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输出结束\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># main.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;simpleLinkedList.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    NodeType* llist = LinkedList_Create();</span><br><span class="line">	</span><br><span class="line">    LinkedList_Insert(llist, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    LinkedList_Insert(llist, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    LinkedList_Print(llist);</span><br><span class="line"></span><br><span class="line">    LinkedList_NodeDelete(llist, <span class="number">0</span>);</span><br><span class="line">    LinkedList_NodeDelete(llist, <span class="number">0</span>);</span><br><span class="line">    LinkedList_Print(llist);</span><br><span class="line"></span><br><span class="line">    LinkedList_Insert(llist, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    LinkedList_Insert(llist, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    LinkedList_Delete(llist);</span><br><span class="line">    llist = <span class="literal">NULL</span>;</span><br><span class="line">    LinkedList_Print(llist);  <span class="comment">// 没有任何输出</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>可以看到，在<code>main</code>函数中的最后，我们通过<code>LinkedList_Delete</code>来删除整个链表后，为什么后面需要<code>llist = NULL</code>呢，为什么不能写在<code>LinkedList_Delete</code>中呢 ？</p>
<p>因为当我们在<code>LinkedList_Delete</code>中通过<code>free</code>将链表删除后，链表的<code>head</code>并不是<code>NULL</code>，它依旧指向了原来的地址，而我们链表相关的函数是根据<code>head</code>是否等于<code>NULL</code>，来判断合法与否的，单纯的删除后，链表的<code>head</code>并不等于<code>NULL</code>。</p>
<p>我们在<code>void LinkedList_Delete(NodeType* linkedlist)</code>中可以看到，我们传入的是一个<code>NodeType</code>类型的指针，我们可以根据指针，去修改指针指向的内存空间，但是我们的传进去指针在函数中依旧是该函数局部的参数而已，我们对其直接赋值，并不会影响到<code>main</code>中的<code>llist</code>。这也是为什么要在main中显式的<code>llist = NULL</code>的原因。</p>
<p>如果要在<code>void LinkedList_Delete(NodeType* linkedlist)</code>中对<code>main</code>中的<code>llist</code>进行赋值的话，可以传入一个二级指针。因为<code>llist</code>本身就是指针，也就是<code>llist</code>的指针<code>&amp;llist</code>。</p>
<h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><p>我们可以将链表节点和节点中的元素进一步的封装。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Element</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">&#125; ElementType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    ElementType* data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; NodeType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LinkedList</span>&#123;</span></span><br><span class="line">    NodeType* head;</span><br><span class="line">    NodeType* tail;</span><br><span class="line">&#125; LinkedListType;</span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://zh.wikipedia.org/wiki/%E9%93%BE%E8%A1%A8">维基百科</a><br><a href="https://www.icourse163.org/course/ZJU-200001?tid=1207389210">C语言程序设计进阶</a></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>socket聊天室(Java实现)</title>
    <url>/2021/05/05/socket%E8%81%8A%E5%A4%A9%E5%AE%A4-Java%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<blockquote>
<p>server.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">55555</span>);</span><br><span class="line">        List&lt;Socket&gt; sockets = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//noinspection InfiniteLoopStatement</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            Socket socket = serverSocket.accept();</span><br><span class="line">            sockets.add(socket);</span><br><span class="line">            ServerThread serverThread = <span class="keyword">new</span> ServerThread(socket, sockets);</span><br><span class="line">            serverThread.start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ServerThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Socket socket;</span><br><span class="line">    List&lt;Socket&gt; sockets;</span><br><span class="line"></span><br><span class="line">    ServerThread(Socket socket, List&lt;Socket&gt; sockets) &#123;</span><br><span class="line">        <span class="keyword">this</span>.socket = socket;</span><br><span class="line">        <span class="keyword">this</span>.sockets = sockets;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = <span class="keyword">this</span>.socket.getInputStream();</span><br><span class="line">            OutputStream outputStream = <span class="keyword">this</span>.socket.getOutputStream();</span><br><span class="line">            <span class="keyword">var</span> reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream, StandardCharsets.UTF_8));</span><br><span class="line">            <span class="keyword">var</span> writer = <span class="keyword">new</span> OutputStreamWriter(outputStream, StandardCharsets.UTF_8);</span><br><span class="line">            writer.write(<span class="string">&quot;hello-&gt;&quot;</span>+socket.getRemoteSocketAddress()+<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">            writer.flush();</span><br><span class="line">            <span class="comment">//noinspection InfiniteLoopStatement</span></span><br><span class="line">            <span class="keyword">for</span>(;;)&#123;</span><br><span class="line">                String string = reader.readLine();</span><br><span class="line">                <span class="keyword">for</span>(Socket _socket: sockets)&#123;</span><br><span class="line">                    outputStream = _socket.getOutputStream();</span><br><span class="line">                    writer = <span class="keyword">new</span> OutputStreamWriter(outputStream, StandardCharsets.UTF_8);</span><br><span class="line">                    writer.write(<span class="keyword">this</span>.socket.getRemoteSocketAddress()+<span class="string">&quot;: &quot;</span>+string+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    writer.flush();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.socket.close();</span><br><span class="line">                sockets.remove(socket);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<blockquote>
<p>client.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Handler;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.LogRecord;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">&quot;localhost&quot;</span>, <span class="number">55555</span>);</span><br><span class="line">        SendThread sendThread = <span class="keyword">new</span> SendThread(socket);</span><br><span class="line">        ReceiveThread receiveThread = <span class="keyword">new</span> ReceiveThread(socket);</span><br><span class="line">        sendThread.start();</span><br><span class="line">        receiveThread.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SendThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    Socket socket;</span><br><span class="line"></span><br><span class="line">    SendThread(Socket socket)&#123;</span><br><span class="line">        <span class="keyword">this</span>.socket = socket;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            OutputStream output = <span class="keyword">this</span>.socket.getOutputStream();</span><br><span class="line">            <span class="keyword">var</span> writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(output, StandardCharsets.UTF_8));</span><br><span class="line">            <span class="comment">//noinspection InfiniteLoopStatement</span></span><br><span class="line">            <span class="keyword">for</span>(;;) &#123;</span><br><span class="line">                String string = scanner.nextLine();</span><br><span class="line">                writer.write(string+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                writer.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReceiveThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    Socket socket;</span><br><span class="line"></span><br><span class="line">    ReceiveThread(Socket socket)&#123;</span><br><span class="line">        <span class="keyword">this</span>.socket = socket;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream input = <span class="keyword">this</span>.socket.getInputStream();</span><br><span class="line">            <span class="keyword">var</span> reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(input, StandardCharsets.UTF_8));</span><br><span class="line">            <span class="comment">//noinspection InfiniteLoopStatement</span></span><br><span class="line">            <span class="keyword">for</span>(;;) &#123;</span><br><span class="line">                String string = reader.readLine();</span><br><span class="line">                System.out.println(string);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>堆栈的实现</title>
    <url>/2020/02/17/stack-realize/</url>
    <content><![CDATA[<h1 id="什么是堆栈"><a href="#什么是堆栈" class="headerlink" title="什么是堆栈"></a>什么是堆栈</h1><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">``` c</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ElementType e1, e2, e3, e4;</span><br><span class="line">    e1.value = <span class="number">1</span>; e2.value = <span class="number">2</span>; e3.value = <span class="number">3</span>; e4.value = <span class="number">4</span>;</span><br><span class="line">    NodeType* <span class="built_in">stack</span> = Stack_Create();</span><br><span class="line">    Stack_Push(<span class="built_in">stack</span>, &amp;e1);</span><br><span class="line">    Stack_Push(<span class="built_in">stack</span>, &amp;e2);</span><br><span class="line">    Stack_Push(<span class="built_in">stack</span>, &amp;e3);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;弹出%d\n&quot;</span>, Stack_Pop(<span class="built_in">stack</span>)-&gt;value);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;弹出%d\n&quot;</span>, Stack_Pop(<span class="built_in">stack</span>)-&gt;value);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;弹出%d\n&quot;</span>, Stack_Pop(<span class="built_in">stack</span>)-&gt;value);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Stack_IsEmpty(<span class="built_in">stack</span>)) <span class="built_in">printf</span>(<span class="string">&quot;stack is empty&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;stack is not empty&quot;</span>);</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href=""></a></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>STM32-定时器</title>
    <url>/2020/04/09/stm32-timer/</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>树</title>
    <url>/2020/04/21/tree/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>串口控制esp8266发送HTTP请求</title>
    <url>/2020/01/20/%E4%B8%B2%E5%8F%A3%E6%8E%A7%E5%88%B6esp8266%E5%8F%91%E9%80%81HTTP%E8%AF%B7%E6%B1%82/</url>
    <content><![CDATA[<p>8266test</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>标签1</tag>
        <tag>标签2</tag>
        <tag>标签3</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派相关</title>
    <url>/2020/02/27/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>树莓派部署Django</title>
    <url>/2020/03/19/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%83%A8%E7%BD%B2Django/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>字符串转算术表达式(堆栈)</title>
    <url>/2020/03/25/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E7%AE%97%E6%9C%AF%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E5%A0%86%E6%A0%88/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>蔡勒公式</title>
    <url>/2020/03/23/%E8%94%A1%E5%8B%92%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<blockquote>
<p>蔡勒公式（Zeller’s congruence），是一种计算任何一日属一星期中哪一日的演算法，由德国数学家克里斯提安·蔡勒（英语：Christian Zeller）推算出来。</p>
</blockquote>
<span id="more"></span>
<p>$$<br>X=\left|<br>    \begin{matrix}<br>        x_{11} &amp; x_{12} &amp; \cdots &amp; x_{1d} \<br>        x_{21} &amp; x_{22} &amp; \cdots &amp; x_{2d} \<br>        \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>        x_{11} &amp; x_{12} &amp; \cdots &amp; x_{1d} \<br>    \end{matrix}<br>\right|<br>$$</p>
<p>$$<br>h(\theta) = \sum_{j=0} ^n \theta_j x_j<br>$$</p>
<p>$$<br>\int_{1}^{2}{x}dx \<br>\sum_{i=1}^{\infty}{x}<br>$$</p>
]]></content>
  </entry>
  <entry>
    <title>蜂鸣器演奏《送别》</title>
    <url>/2020/01/15/%E8%9C%82%E9%B8%A3%E5%99%A8%E6%BC%94%E5%A5%8F%E3%80%8A%E9%80%81%E5%88%AB%E3%80%8B/</url>
    <content><![CDATA[<span id="more"></span>]]></content>
  </entry>
  <entry>
    <title>雨は、いつかあがるのかな</title>
    <url>/2020/04/02/%E9%9B%A8%E3%81%AF%E3%80%81%E3%81%84%E3%81%A4%E3%81%8B%E3%81%82%E3%81%8C%E3%82%8B%E3%81%AE%E3%81%8B%E3%81%AA/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Android课堂笔记(安卓篇)</title>
    <url>/2020/03/31/android-note-1/</url>
    <content><![CDATA[<h1 id="日志的使用"><a href="#日志的使用" class="headerlink" title="日志的使用"></a>日志的使用</h1><h2 id="什么是日志"><a href="#什么是日志" class="headerlink" title="什么是日志"></a>什么是日志</h2><p>简单来说，我们在运行 Android应用的时候，并不能像 C语言或是其他语言一样直接通过<code>printf</code>来查看需要的信息，这时候就需要用到<code>Log</code>。当我们设置好<code>Log</code>之后，就可以在 Android Studio 里面的<code>Logcat</code>中查看相关信息。  </p>
<span id="more"></span>
<p>当日志过多的时候，可以通过设置<code>Filter</code>来过滤。</p>
<h2 id="日志的等级"><a href="#日志的等级" class="headerlink" title="日志的等级"></a>日志的等级</h2><p>可以通过设置日志的级别来</p>
<table>
<thead>
<tr>
<th align="center">level</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Debug</td>
<td align="center">显示仅在开发期间有用的调试日志消息，以及此列表中较低的消息级别</td>
</tr>
<tr>
<td align="center">Info</td>
<td align="center">显示常规使用情况的预期日志消息，以及此列表中较低的消息级别</td>
</tr>
<tr>
<td align="center">Warn</td>
<td align="center">显示尚不是错误的潜在问题，以及此列表中较低的消息级别</td>
</tr>
<tr>
<td align="center">Error</td>
<td align="center">显示已经引发错误的问题，以及此列表中较低的消息级别</td>
</tr>
</tbody></table>
<h2 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 快捷键 logt</span></span><br><span class="line">    <span class="comment">// 长度超过 23 个字符的标记名称在 logcat 输出中会被截断</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">&quot;Log Test&quot;</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Log.e(TAG, <span class="string">&quot;onCreate: This is error&quot;</span>);</span><br><span class="line">        Log.w(TAG, <span class="string">&quot;onCreate: This is warning&quot;</span>);</span><br><span class="line">        Log.i(TAG, <span class="string">&quot;onCreate: This is info&quot;</span>);</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;onCreate: This is debug&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">11</span>:<span class="number">38</span>:<span class="number">11.052</span> <span class="number">3413</span>-<span class="number">3413</span>/? E/Log Test: onCreate: This is error</span><br><span class="line"><span class="number">2020</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">11</span>:<span class="number">38</span>:<span class="number">11.052</span> <span class="number">3413</span>-<span class="number">3413</span>/? W/Log Test: onCreate: This is warning</span><br><span class="line"><span class="number">2020</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">11</span>:<span class="number">38</span>:<span class="number">11.052</span> <span class="number">3413</span>-<span class="number">3413</span>/? I/Log Test: onCreate: This is info</span><br><span class="line"><span class="number">2020</span>-<span class="number">03</span>-<span class="number">31</span> <span class="number">11</span>:<span class="number">38</span>:<span class="number">11.052</span> <span class="number">3413</span>-<span class="number">3413</span>/? D/Log Test: onCreate: This is debug</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.android.com/studio/debug/am-logcat?hl=zh-cn#java">https://developer.android.com/studio/debug/am-logcat?hl=zh-cn#java</a></p>
<h1 id="常用控件"><a href="#常用控件" class="headerlink" title="常用控件"></a>常用控件</h1><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><p>要设置一个<code>Button</code>我们要经过以下步骤：</p>
<ul>
<li>在<code>Layout</code>中添加一个<code>Button</code></li>
<li>在相对应的活动中设置监听</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/button_id&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;@string/self_destruct&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="单个-button-设置监听"><a href="#单个-button-设置监听" class="headerlink" title="单个 button 设置监听"></a>单个 button 设置监听</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">&quot;MainActivity&quot;</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> Button button1 = findViewById(R.id.button);</span><br><span class="line">        <span class="keyword">final</span> Button button2 = findViewById(R.id.button2);</span><br><span class="line">        button1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">&quot;this is toast&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        button2.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Log.i(TAG, <span class="string">&quot;onClick: This is button info&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="多个-button-设置监听"><a href="#多个-button-设置监听" class="headerlink" title="多个 button 设置监听"></a>多个 button 设置监听</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> Button button1 = findViewById(R.id.button);</span><br><span class="line">        <span class="keyword">final</span> Button button2 = findViewById(R.id.button2);</span><br><span class="line">        button1.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        button2.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.button:</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;button1 click&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.button2:</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;button2 click&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>: <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p><code>public class MainActivity extends AppCompatActivity implements View.OnClickListener</code></p>
<h2 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h2><ul>
<li>在<code>Layout</code>中添加一个<code>TextView</code></li>
<li>通过<code>Button</code>改变其内容</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/text_view_id&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;@string/hello&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        <span class="keyword">final</span> TextView textView = findViewById(R.id.textView);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                textView.setText(<span class="string">&quot;change&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>不建议在设置<code>TextView</code>的时候直接使用硬编码的字符串，应该将其放在<code>strings.xml</code>中，</p>
<h2 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h2><ul>
<li>在<code>Layout</code>中添加一个<code>EditText</code></li>
<li>通过<code>Button</code>或<code>addTextChangedListener</code>将其内容显示在<code>TextView</code>上</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/plain_text_input&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:inputType</span>=<span class="string">&quot;text&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="手动更新TextView"><a href="#手动更新TextView" class="headerlink" title="手动更新TextView"></a>手动更新TextView</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        <span class="keyword">final</span> TextView textView = findViewById(R.id.textView);</span><br><span class="line">        <span class="keyword">final</span> EditText editText = findViewById(R.id.editText);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                textView.setText(editText.getText());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="自动更新TextView"><a href="#自动更新TextView" class="headerlink" title="自动更新TextView"></a>自动更新TextView</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> TextView textView = findViewById(R.id.textView);</span><br><span class="line">        <span class="keyword">final</span> EditText editText = findViewById(R.id.editText);</span><br><span class="line">        editText.addTextChangedListener(<span class="keyword">new</span> TextWatcher() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> count, <span class="keyword">int</span> after)</span> </span>&#123;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> before, <span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">                textView.setText(editText.getText());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable s)</span> </span>&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>在 <em>Android Studio</em> 中，可以通过将光标置于<code>TextWatcher</code>处，通过<kbd>Alt</kbd>+<kbd>Enter</kbd>，快速导包</p>
<h2 id="ProgressBar"><a href="#ProgressBar" class="headerlink" title="ProgressBar"></a>ProgressBar</h2><p><code>ProgressBar</code>有两种样式，<code>Indeterminate</code>和<code>Determinate</code>，也就是不确定的，和确定的进度条。</p>
<ul>
<li>在<code>Layout</code>中添加一个<code>ProgressBar</code></li>
<li>通过<code>Button</code>使<code>ProgressBar</code>进度增加，当增加到100时，设置为<code>View.INVISIBLE</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:id</span>=<span class="string">&quot;@+id/indeterminateBar&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">       /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:id</span>=<span class="string">&quot;@+id/determinateBar&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">style</span>=<span class="string">&quot;@android:style/Widget.ProgressBar.Horizontal&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:progress</span>=<span class="string">&quot;25&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="通过-Button-更新-ProgressBar"><a href="#通过-Button-更新-ProgressBar" class="headerlink" title="通过 Button 更新 ProgressBar"></a>通过 Button 更新 ProgressBar</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> TextView textView = findViewById(R.id.textView);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        <span class="keyword">final</span> Button button1 = findViewById(R.id.button1);</span><br><span class="line">        <span class="keyword">final</span> ProgressBar progressBar = findViewById(R.id.progressBar);</span><br><span class="line">        <span class="keyword">final</span> ProgressBar progressBar1 = findViewById(R.id.progressBar1);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(progressBar.getProgress() &gt;=<span class="number">100</span>) &#123;</span><br><span class="line">                    progressBar.setVisibility(View.INVISIBLE);</span><br><span class="line">                    progressBar1.setVisibility(View.INVISIBLE);</span><br><span class="line">                &#125;</span><br><span class="line">                progressBar.setProgress(progressBar.getProgress()+<span class="number">10</span>);</span><br><span class="line">                textView.setText(String.valueOf(progressBar.getProgress()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        button1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                progressBar.setProgress(<span class="number">0</span>);</span><br><span class="line">                progressBar.setVisibility(View.VISIBLE);</span><br><span class="line">                progressBar1.setVisibility(View.VISIBLE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>可以通过<code>setMax()</code>设置<code>ProgressBar</code>的量程，默认为100。<br><code>View.INVISIBLE</code>，视图不可见，被点击时不会被响应，但是依旧占位。</p>
<h2 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        <span class="keyword">final</span> ImageView imageView = findViewById(R.id.imageView);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                    imageView.setImageResource(R.drawable.p2);</span><br><span class="line">                    flag = !flag;</span><br><span class="line">                &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                    imageView.setImageResource(R.drawable.p1);</span><br><span class="line">                    flag = !flag;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] fruit = &#123;<span class="string">&quot;pear&quot;</span>, <span class="string">&quot;apple&quot;</span>, <span class="string">&quot;peach&quot;</span>, <span class="string">&quot;watermelon&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;cherry&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> ListView listView = findViewById(R.id.listView);</span><br><span class="line">        ArrayAdapter&lt;String&gt; arrayAdapter = <span class="keyword">new</span> ArrayAdapter&lt;String&gt;(MainActivity.<span class="keyword">this</span>,android.R.layout.simple_list_item_1, fruit);</span><br><span class="line">        listView.setAdapter(arrayAdapter);</span><br><span class="line">        listView.setOnItemClickListener(<span class="keyword">new</span> AdapterView.OnItemClickListener()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; adapterView, View view, <span class="keyword">int</span> i, <span class="keyword">long</span> l)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, fruit[i], Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.android.com/reference/android/widget/Button">https://developer.android.com/reference/android/widget/Button</a><br><a href="https://developer.android.com/reference/android/widget/TextView">https://developer.android.com/reference/android/widget/TextView</a><br><a href="https://developer.android.com/guide/topics/resources/string-resource.html">https://developer.android.com/guide/topics/resources/string-resource.html</a><br><a href="https://developer.android.com/reference/android/widget/EditText">https://developer.android.com/reference/android/widget/EditText</a><br><a href="https://developer.android.com/reference/kotlin/android/widget/ProgressBar">https://developer.android.com/reference/kotlin/android/widget/ProgressBar</a><br><a href="https://developer.android.com/reference/kotlin/android/widget/ImageView">https://developer.android.com/reference/kotlin/android/widget/ImageView</a><br><a href="https://developer.android.com/reference/kotlin/android/widget/ListView">https://developer.android.com/reference/kotlin/android/widget/ListView</a></p>
<h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><h2 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h2><h3 id="从无到有创建Activity"><a href="#从无到有创建Activity" class="headerlink" title="从无到有创建Activity"></a>从无到有创建Activity</h3><p><em>Android Studio</em> 创建应用时，会提供许多<code>Activity</code>模板，如 <em>Basic Activity</em>, <em>Empty Activity</em>等，但是我们终究需要知道如何从无到有创建Activity，于是可以选择 <em>Add No Activity</em>。</p>
<p>其步骤如下:</p>
<ul>
<li>右键 <em>res</em> 文件夹，在 <em>NEW</em> 中选择 <em>New Android Resource Directory</em> ，在 <em>Resource Type</em> 中选择 <em>layout</em></li>
<li>右键 <em>layout</em> 文件夹，在 <em>NEW</em> 中选择 <em>XML</em> 中的<em>Layout XML File</em></li>
<li>在 <em>java</em> 文件夹中相对应的路径下创建 <em>Java Class</em> 文件 - <em>FirstActivity</em></li>
<li>在 <em>AndroidManifest.xml</em> 中注册 <code>Activity</code>  </li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.learnactivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.first_activity_layout);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.FirstActivity&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Activity-跳转"><a href="#Activity-跳转" class="headerlink" title="Activity 跳转"></a>Activity 跳转</h3><p>在编写APP时，往往需要多个界面，也就多个<code>Activity</code>，因此我们需要从一个<code>Activity</code>跳转到另外的<code>Activity</code>，而 <code>Activity</code> 跳转往往是通过 <code>Intent</code> 实现的<br><code>Activity</code> 跳转分为两种:</p>
<ul>
<li>显式跳转</li>
<li>隐式跳转</li>
</ul>
<h4 id="Activity-显式跳转"><a href="#Activity-显式跳转" class="headerlink" title="Activity 显式跳转"></a>Activity 显式跳转</h4><p>显示跳转步骤如下:</p>
<ul>
<li>在已有<code>Activity</code>的工程基础上，通过 <em>Android Studio</em> 直接 <em>New Activity</em>，创建第二个<code>Activity</code> (Main2Activity)</li>
<li>在两个<code>Activity</code>各自对应的<code>layout</code>中各添加一个<code>TextView</code>和<code>Button</code>.<br>用来显示当前所处的<code>Activity</code>以及跳转. <em>MainActivity</em> 中的<code>Button</code>用于跳转到 <em>Main2Activity</em>，也就是第二个活动。<em>Main2Activity</em> 中的<code>Button</code>用于用于结束当前活动，也就是结束 <em>Main2Activity</em>，于是就会回到 <em>MainActivity</em></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.Main2Activity&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, Main2Activity.class);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main2Activity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main2);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button2);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Activity-隐式跳转"><a href="#Activity-隐式跳转" class="headerlink" title="Activity 隐式跳转"></a>Activity 隐式跳转</h4><p>同个应用中，显示跳转和隐式跳转类似.只需修改跳转时候的 <code>intent</code> 和 <em>AndroidManifest.xml</em>，而跨应用跳转也是同样的，新建一个新的应用，点击 <code>Button</code> 通过 <em>intent-filter</em> 跳转</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.Main2Activity&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;sakura.demo&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;category.demo&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">        intent.setAction(<span class="string">&quot;sakura.demo&quot;</span>);</span><br><span class="line">        intent.addCategory(<span class="string">&quot;category.demo&quot;</span>);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="携带数据跳转"><a href="#携带数据跳转" class="headerlink" title="携带数据跳转"></a>携带数据跳转</h4><p>基于显示跳转代码修改</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    TextView textView;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        textView  = findViewById(R.id.textView);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, Main2Activity.class);</span><br><span class="line">                intent.putExtra(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">                intent.putExtra(<span class="string">&quot;score&quot;</span>, <span class="number">90</span>);</span><br><span class="line">                startActivityForResult(intent, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, <span class="meta">@Nullable</span> Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        <span class="keyword">if</span>(requestCode==<span class="number">0</span> &amp;&amp; resultCode==RESULT_OK)&#123;</span><br><span class="line">            textView.setText(data.getStringExtra(<span class="string">&quot;message&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main2Activity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main2);</span><br><span class="line">        <span class="keyword">final</span> EditText editText = findViewById(R.id.editText);</span><br><span class="line">        <span class="keyword">final</span> TextView textView = findViewById(R.id.textView2);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button2);</span><br><span class="line">        Intent intent = getIntent();</span><br><span class="line">        String name = intent.getStringExtra(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> score = intent.getIntExtra(<span class="string">&quot;score&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        textView.setText(name + score);</span><br><span class="line">        Toast.makeText(Main2Activity.<span class="keyword">this</span>, name+score, Toast.LENGTH_LONG).show();</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Intent intent1 = <span class="keyword">new</span> Intent();</span><br><span class="line">                intent1.putExtra(<span class="string">&quot;message&quot;</span>, editText.getText().toString());</span><br><span class="line">                setResult(RESULT_OK, intent1);</span><br><span class="line">                finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Activity-生命周期"><a href="#Activity-生命周期" class="headerlink" title="Activity 生命周期"></a>Activity 生命周期</h3><p>新建三个活动，并设置两个Button</p>
<ul>
<li>第一个Button对应Activity2</li>
<li>第二个Button对应Activity3</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.Main3Activity&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.AppCompat.DayNight.Dialog&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.Main2Activity&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">&quot;MainActivity&quot;</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        <span class="keyword">final</span> Button button1 = findViewById(R.id.button2);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, Main2Activity.class);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        button1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, Main3Activity.class);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        Log.i(TAG, <span class="string">&quot;onCreate: do&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        Log.i(TAG, <span class="string">&quot;onDestroy: do&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        Log.i(TAG, <span class="string">&quot;onStart: do&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        Log.i(TAG, <span class="string">&quot;onStop: do&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        Log.i(TAG, <span class="string">&quot;onResume: do&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        Log.i(TAG, <span class="string">&quot;onPause: do&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">01</span>:<span class="number">45.710</span> <span class="number">2574</span>-<span class="number">2574</span>/? I/MainActivity: onCreate: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">01</span>:<span class="number">45.716</span> <span class="number">2574</span>-<span class="number">2574</span>/? I/MainActivity: onStart: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">01</span>:<span class="number">45.720</span> <span class="number">2574</span>-<span class="number">2574</span>/? I/MainActivity: onResume: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">01</span>:<span class="number">48.603</span> <span class="number">2574</span>-<span class="number">2574</span>/com.example.myapplication I/MainActivity: onPause: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">01</span>:<span class="number">49.250</span> <span class="number">2574</span>-<span class="number">2574</span>/com.example.myapplication I/MainActivity: onStop: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">01</span>:<span class="number">52.114</span> <span class="number">2574</span>-<span class="number">2574</span>/com.example.myapplication I/MainActivity: onStart: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">01</span>:<span class="number">52.116</span> <span class="number">2574</span>-<span class="number">2574</span>/com.example.myapplication I/MainActivity: onResume: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">01</span>:<span class="number">55.121</span> <span class="number">2574</span>-<span class="number">2574</span>/com.example.myapplication I/MainActivity: onPause: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">01</span>:<span class="number">57.300</span> <span class="number">2574</span>-<span class="number">2574</span>/com.example.myapplication I/MainActivity: onResume: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">04.792</span> <span class="number">2574</span>-<span class="number">2574</span>/com.example.myapplication I/MainActivity: onPause: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">04.823</span> <span class="number">2574</span>-<span class="number">2574</span>/com.example.myapplication I/MainActivity: onStop: <span class="keyword">do</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">05</span>-<span class="number">12</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">05.274</span> <span class="number">2574</span>-<span class="number">2574</span>/com.example.myapplication I/MainActivity: onDestroy: <span class="keyword">do</span></span><br></pre></td></tr></table></figure>

<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><ul>
<li>通过<code>Java class</code>来手动创建的<code>Activity</code>需要在 <em>AndroidManifest.xml</em> 中注册<br>如果通过 <em>Android Studio</em> 直接 <em>New Activity</em> 则不用。且注意要通过<code>setContentView()</code>来绑定<code>layout</code></li>
<li>隐式跳转的目标 <em>Activity</em> 必须带有 <em>intent-filter</em><br>隐式跳转的目标 <em>Activity</em> 非启动活动时，必须加上 <code>&lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&gt;</code></li>
</ul>
<h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2><h2 id="Broadcast-Receiver"><a href="#Broadcast-Receiver" class="headerlink" title="Broadcast Receiver"></a>Broadcast Receiver</h2><h3 id="静态广播接收器"><a href="#静态广播接收器" class="headerlink" title="静态广播接收器"></a>静态广播接收器</h3><blockquote>
<p>从 Android 8.0（API 级别 26）开始，系统对清单声明的接收器施加了额外的限制。</p>
</blockquote>
<blockquote>
<p>如果您的应用以 Android 8.0 或更高版本为目标平台，那么对于大多数隐式广播（没有明确针对您的应用的广播），您不能使用清单来声明接收器。当用户正在活跃地使用您的应用时，您仍可使用上下文注册的接收器。</p>
</blockquote>
<h3 id="动态注册广播接收器"><a href="#动态注册广播接收器" class="headerlink" title="动态注册广播接收器"></a>动态注册广播接收器</h3><p>接收网络状态的广播，需要添加网络权限</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.example.broadcastreceiver&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">...</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        IntentFilter intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;</span>);</span><br><span class="line">        registerReceiver(<span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(context, <span class="string">&quot;网络变化&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, intentFilter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="自定义广播"><a href="#自定义广播" class="headerlink" title="自定义广播"></a>自定义广播</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        registerReceiver(<span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(context, <span class="string">&quot;接收到广播&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="keyword">new</span> IntentFilter(<span class="string">&quot;BroadcastReceiver message&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                sendBroadcast(<span class="keyword">new</span> Intent(<span class="string">&quot;BroadcastReceiver message&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="有序广播"><a href="#有序广播" class="headerlink" title="有序广播"></a>有序广播</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        IntentFilter intentFilter = <span class="keyword">new</span> IntentFilter(<span class="string">&quot;BroadcastReceiver message&quot;</span>);</span><br><span class="line">        intentFilter.setPriority(<span class="number">20</span>);</span><br><span class="line">        registerReceiver(<span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(context, <span class="string">&quot;广播零&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line"><span class="comment">//                abortBroadcast();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, intentFilter);</span><br><span class="line"></span><br><span class="line">        intentFilter.setPriority(<span class="number">10</span>);</span><br><span class="line">        registerReceiver(<span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(context, <span class="string">&quot;广播一&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, intentFilter);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(<span class="string">&quot;BroadcastReceiver message&quot;</span>);</span><br><span class="line">                sendOrderedBroadcast(intent, <span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote>
<p>要停止接收广播，请调用 unregisterReceiver(android.content.BroadcastReceiver)。当您不再需要接收器或上下文不再有效时，请务必注销接收器。</p>
</blockquote>
<h2 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.android.com/guide/components/intents-filters">https://developer.android.com/guide/components/intents-filters</a><br><a href="https://developer.android.com/guide/components/broadcasts">https://developer.android.com/guide/components/broadcasts</a></p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="保存到应用专属存储空间"><a href="#保存到应用专属存储空间" class="headerlink" title="保存到应用专属存储空间"></a>保存到应用专属存储空间</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    FileOutputStream fileOutputStream = <span class="keyword">null</span>;</span><br><span class="line">    FileInputStream fileInputStream = <span class="keyword">null</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        <span class="keyword">final</span> Button button1 = findViewById(R.id.button2);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fileOutputStream = openFileOutput(<span class="string">&quot;test.txt&quot;</span>, Context.MODE_PRIVATE);</span><br><span class="line">                    fileOutputStream.write(<span class="keyword">new</span> String(<span class="string">&quot;Hello World\n&quot;</span>).getBytes());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(fileOutputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            fileOutputStream.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        button1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fileInputStream = openFileInput(<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line">                    <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[fileInputStream.available()];</span><br><span class="line">                    fileInputStream.read(bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> String(bytes), Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        fileInputStream.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="保存键值对数据"><a href="#保存键值对数据" class="headerlink" title="保存键值对数据"></a>保存键值对数据</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> Button button = findViewById(R.id.button);</span><br><span class="line">        <span class="keyword">final</span> Button button1 = findViewById(R.id.button2);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                SharedPreferences.Editor editor = getSharedPreferences(<span class="string">&quot;datasp&quot;</span>, MODE_PRIVATE).edit();</span><br><span class="line">                editor.putString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">                editor.putInt(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>);</span><br><span class="line">                editor.putFloat(<span class="string">&quot;weight&quot;</span>, <span class="number">123.2f</span>);</span><br><span class="line">                editor.apply();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        button1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                SharedPreferences sharedPreferences = getSharedPreferences(<span class="string">&quot;datasp&quot;</span>, MODE_PRIVATE);</span><br><span class="line">                String name = sharedPreferences.getString(<span class="string">&quot;name&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">                <span class="keyword">int</span> age = sharedPreferences.getInt(<span class="string">&quot;age&quot;</span>, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">float</span> weight = sharedPreferences.getFloat(<span class="string">&quot;weight&quot;</span>, <span class="number">0</span>);</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, age+name+weight, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.android.com/training/data-storage/app-specific">https://developer.android.com/training/data-storage/app-specific</a><br><a href="https://developer.android.com/training/data-storage/shared-preferences">https://developer.android.com/training/data-storage/shared-preferences</a></p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Java</category>
      </categories>
  </entry>
</search>
